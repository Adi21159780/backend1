# Generated by Django 5.0.4 on 2024-05-04 18:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('emp_name', models.CharField(max_length=30)),
                ('emp_emailid', models.CharField(default='A@gmail.com', max_length=50, primary_key=True, serialize=False)),
                ('emp_skills', models.CharField(max_length=150)),
                ('emp_role', models.CharField(max_length=50)),
                ('emp_pwd', models.CharField(default='changeme', max_length=15)),
                ('emp_phone', models.CharField(max_length=11)),
                ('emp_profile', models.CharField(default='profile.png', max_length=100)),
                ('add_date', models.CharField(default=None, max_length=200, null=True)),
                ('pay_sts', models.CharField(default=None, max_length=200, null=True)),
                ('Status', models.CharField(default='Active', max_length=8)),
                ('likes', models.CharField(default='0', max_length=10000)),
            ],
        ),
        migrations.CreateModel(
            name='adhoc',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('dept', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=20)),
                ('mon', models.CharField(max_length=20)),
                ('year', models.PositiveSmallIntegerField()),
                ('amt', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='admin_log',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('admin_id', models.CharField(default=None, max_length=200, null=True)),
                ('my_ip', models.CharField(default=None, max_length=200, null=True)),
                ('logged_in', models.CharField(default=None, max_length=200, null=True)),
                ('logged_out', models.CharField(default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='admintable',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(default=None, max_length=200, null=True)),
                ('role', models.CharField(default=None, max_length=200, null=True)),
                ('full_name', models.CharField(default=None, max_length=200, null=True)),
                ('user', models.CharField(default=None, max_length=255, null=True)),
                ('password', models.CharField(default='changeme', max_length=255, null=True)),
                ('otp_id', models.CharField(default=None, max_length=200, null=True)),
                ('otp', models.CharField(default=None, max_length=200, null=True)),
                ('status', models.CharField(default=None, max_length=200, null=True)),
                ('user_pics', models.CharField(default=None, max_length=200, null=True)),
                ('created_at', models.CharField(default=None, max_length=200, null=True)),
                ('modified_at', models.CharField(default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ans_static',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('ansid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='answer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.TextField()),
                ('ansid', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='banktransferstatement',
            fields=[
                ('batchid', models.BigAutoField(primary_key=True, serialize=False)),
                ('debitno', models.CharField(max_length=21)),
                ('date', models.CharField(max_length=21)),
                ('narration', models.CharField(max_length=21)),
                ('filename', models.CharField(max_length=21)),
                ('name', models.CharField(max_length=30)),
                ('bank', models.CharField(max_length=40)),
                ('branch', models.CharField(max_length=20)),
                ('ifsc', models.CharField(max_length=20)),
                ('accountno', models.BigIntegerField()),
                ('amount', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='certificate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Email_id', models.CharField(max_length=50)),
                ('en_no', models.CharField(max_length=50)),
                ('course_title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='chatbot_categories',
            fields=[
                ('cat_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('cid', models.BigAutoField(primary_key=True, serialize=False)),
                ('uid', models.CharField(default=None, max_length=120, null=True)),
                ('date', models.TextField(default=None, null=True)),
                ('message', models.TextField(default=None, null=True)),
                ('vid', models.CharField(max_length=300)),
                ('course_name', models.CharField(default=None, max_length=300, null=True)),
                ('com', models.CharField(max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('c_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('c_name', models.CharField(max_length=30)),
                ('c_addr', models.CharField(default=None, max_length=50, null=True)),
                ('c_phone', models.BigIntegerField()),
                ('add_date', models.CharField(default=None, max_length=200, null=True)),
                ('pay_sts', models.CharField(default=None, max_length=200, null=True)),
                ('payment_type', models.CharField(default=None, max_length=100, null=True)),
                ('start_date', models.TextField(default=None, null=True)),
                ('end_date', models.TextField(default=None, null=True)),
                ('emp_limit', models.IntegerField(default=None, null=True)),
                ('storage_limit', models.IntegerField(default=None, null=True)),
                ('storage_used', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='course',
            fields=[
                ('course_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course_title', models.CharField(max_length=25)),
                ('description', models.CharField(max_length=500)),
                ('Thumbnail', models.CharField(max_length=500)),
                ('c_id', models.IntegerField()),
                ('c_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='course_Employee',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('course_title', models.CharField(max_length=60)),
                ('Email_id', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('Start_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='earnedleave',
            fields=[
                ('emp_emailid', models.CharField(default='A@gmail.com', max_length=50, primary_key=True, serialize=False)),
                ('earnedleave', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='email_alert',
            fields=[
                ('alert_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField()),
                ('type', models.CharField(default=None, max_length=200, null=True)),
                ('title', models.TextField(default=None, null=True)),
                ('deadline', models.TextField(default=None, null=True)),
                ('emp_emailid', models.CharField(default=None, max_length=100, null=True)),
                ('c_name', models.CharField(default=None, max_length=30, null=True)),
                ('task_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='events',
            fields=[
                ('evt_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('evt_type', models.CharField(default=None, max_length=20, null=True)),
                ('evt_start', models.DateField()),
                ('evt_end', models.DateField()),
                ('evt_text', models.TextField()),
                ('evt_color', models.CharField(max_length=7)),
                ('status', models.BooleanField(default=False)),
                ('emp_emailid', models.CharField(default=None, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='expenses',
            fields=[
                ('expense_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emp_emailid', models.CharField(max_length=50)),
                ('expense', models.IntegerField()),
                ('expensedate', models.CharField(max_length=15)),
                ('expenseitm', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('fid', models.BigAutoField(primary_key=True, serialize=False)),
                ('emp_emailid', models.CharField(max_length=50)),
                ('skill', models.CharField(max_length=1000)),
                ('from_email', models.CharField(max_length=30)),
                ('reason', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='files',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('file_name', models.CharField(default=None, max_length=255, null=True)),
                ('job_desc_id', models.IntegerField(default=None, null=True)),
                ('sop_id', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='history',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('eid', models.TextField()),
                ('score', models.IntegerField()),
                ('level', models.IntegerField()),
                ('correct', models.IntegerField()),
                ('wrong', models.IntegerField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('timestamp', models.BigIntegerField()),
                ('status', models.CharField(max_length=40)),
                ('score_updated', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='jd_table',
            fields=[
                ('jd_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='job_desc',
            fields=[
                ('job_desc_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('jd_name', models.CharField(default=None, max_length=150, null=True)),
                ('responsiblities', models.CharField(max_length=5000)),
                ('sdate', models.DateField(default=None, null=True)),
                ('ratings', models.IntegerField(default=0)),
                ('selfratings', models.IntegerField(default=0)),
                ('remarks', models.CharField(default=None, max_length=50, null=True)),
                ('status', models.IntegerField(default=0)),
                ('email_id', models.CharField(max_length=100)),
                ('jid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='kra_table',
            fields=[
                ('kra_id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='leavecounttemp',
            fields=[
                ('emp_emailid', models.CharField(default='A@gmail.com', max_length=50, primary_key=True, serialize=False)),
                ('casualleave', models.IntegerField(default=15)),
                ('medicalleave', models.IntegerField(default=15)),
                ('lopleave', models.IntegerField(default=365)),
                ('earnedleave', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='leavetype',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('LeaveType', models.CharField(max_length=200, null=True)),
                ('Description', models.TextField(null=True)),
                ('Limit', models.IntegerField(default=0)),
                ('CreationDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='loan',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('emp_emailid', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=255)),
                ('lamt', models.IntegerField()),
                ('mamt', models.IntegerField()),
                ('startdate', models.DateField()),
                ('reason', models.CharField(max_length=255)),
                ('status', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='messages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('message', models.TextField(null=True)),
                ('created_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='off_cycle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('tname', models.CharField(max_length=20)),
                ('amt', models.IntegerField()),
                ('effdt', models.DateField()),
                ('note', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='options',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('option', models.CharField(max_length=2000)),
                ('optionid', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='options_static',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('option', models.CharField(max_length=100)),
                ('optionid', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ot',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('hours_worked', models.IntegerField()),
                ('hourly_rate', models.IntegerField()),
                ('overtime', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='pdf',
            fields=[
                ('pdf_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pdf_name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('course_id', models.IntegerField()),
                ('descr', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='questions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('eid', models.TextField()),
                ('qid', models.TextField()),
                ('qns', models.TextField()),
                ('choice', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='questions_static',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('vid', models.CharField(max_length=100)),
                ('qid', models.CharField(max_length=100)),
                ('qns', models.CharField(max_length=5000)),
                ('choice', models.IntegerField()),
                ('sn', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='quiz',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('eid', models.TextField()),
                ('title', models.CharField(max_length=100)),
                ('course_title', models.CharField(max_length=100)),
                ('correct', models.IntegerField()),
                ('wrong', models.IntegerField()),
                ('passing', models.IntegerField()),
                ('total', models.IntegerField()),
                ('time', models.BigIntegerField()),
                ('date', models.TextField()),
                ('status', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='reporting',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('c_id', models.IntegerField()),
                ('Reporting_from', models.CharField(max_length=50)),
                ('Reporting_to', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='resp_148feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_148testt365g',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_157example_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_157feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_47feedback_test',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_47gh',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_59Employee_detail_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='resp_59feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('q1', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='resp_59feedback_form1',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('q2', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='resp_60feedback_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('hay', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='resp_Employee_detail_form',
            fields=[
                ('emp_name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='salary',
            fields=[
                ('sal_id', models.IntegerField(primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=50)),
                ('payout_month', models.CharField(max_length=50)),
                ('effective_from', models.CharField(blank=True, max_length=50, null=True)),
                ('revision', models.IntegerField(blank=True, null=True)),
                ('basic', models.FloatField()),
                ('hra', models.FloatField()),
                ('conveyance', models.FloatField()),
                ('da', models.FloatField()),
                ('special_allowance', models.FloatField()),
                ('monthly_ctc', models.FloatField()),
                ('annual_ctc', models.FloatField()),
                ('Eligible_Deductions', models.FloatField()),
                ('Yearly_Taxable_Salary', models.FloatField()),
                ('Total_Tax_Liability', models.FloatField()),
                ('Monthly_TDS', models.FloatField()),
                ('Monthly_EPF', models.FloatField()),
                ('Monthly_Professional_Tax', models.FloatField()),
                ('Net_Salary', models.FloatField()),
                ('paymentmethod', models.CharField(default='Bank', max_length=50)),
                ('notes', models.CharField(max_length=50)),
                ('remarks', models.CharField(max_length=50)),
                ('holdsalary', models.IntegerField(default=0)),
                ('paid', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='score_final',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50)),
                ('score', models.IntegerField()),
                ('time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='tblleaves',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('LeaveType', models.CharField(max_length=110)),
                ('ToDate', models.CharField(max_length=120)),
                ('FromDate', models.CharField(max_length=120)),
                ('Days', models.IntegerField()),
                ('Description', models.CharField(max_length=500)),
                ('PostingDate', models.DateTimeField(auto_now_add=True)),
                ('AdminRemark', models.CharField(blank=True, max_length=500, null=True)),
                ('AdminRemarkDate', models.CharField(blank=True, max_length=120, null=True)),
                ('Status', models.IntegerField()),
                ('IsRead', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='user_answer',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('qid', models.CharField(max_length=50)),
                ('ans', models.CharField(max_length=50)),
                ('correctans', models.CharField(max_length=50)),
                ('eid', models.CharField(max_length=50)),
                ('username', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Adhaar',
            fields=[
                ('A_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('adhaar_no', models.BigIntegerField()),
                ('adhaar_name', models.CharField(max_length=200)),
                ('enroll_no', models.PositiveIntegerField()),
                ('adhaar_pic', models.CharField(max_length=150)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('log_type', models.BooleanField(default=None, null=True)),
                ('user_ip', models.CharField(default=None, max_length=200, null=True)),
                ('latitude', models.CharField(default=None, max_length=200, null=True)),
                ('longitude', models.CharField(default=None, max_length=200, null=True)),
                ('datetime_log', models.CharField(default=None, max_length=200, null=True)),
                ('date_updated', models.DateTimeField(default=None, null=True)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='bank_details',
            fields=[
                ('B_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('holder_name', models.CharField(default=None, max_length=150, null=True)),
                ('bank_name', models.CharField(default=None, max_length=150, null=True)),
                ('acc_no', models.CharField(default=None, max_length=50, null=True)),
                ('branch', models.CharField(default=None, max_length=150, null=True)),
                ('acc_type', models.CharField(default=None, max_length=150, null=True)),
                ('ifsc', models.CharField(default=None, max_length=50, null=True)),
                ('Pan_no', models.CharField(default=None, max_length=50, null=True)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='case',
            fields=[
                ('create_for', models.CharField(max_length=50)),
                ('case_type', models.CharField(max_length=50)),
                ('case_title', models.TextField()),
                ('case_desc', models.TextField()),
                ('case_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('case_date', models.DateTimeField(auto_now_add=True)),
                ('case_status', models.CharField(default='New', max_length=30)),
                ('assigned_to', models.ForeignKey(db_column='assigned_to', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='assigned_cases', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, related_name='created_cases', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='chat',
            fields=[
                ('chatid', models.BigAutoField(primary_key=True, serialize=False)),
                ('sender_id', models.CharField(max_length=50)),
                ('reciever_id', models.CharField(max_length=50)),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('case_id', models.ForeignKey(db_column='case_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.case')),
            ],
        ),
        migrations.CreateModel(
            name='chatbot_questions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=255)),
                ('reply', models.CharField(max_length=255)),
                ('category_id', models.ForeignKey(db_column='category_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.chatbot_categories')),
            ],
        ),
        migrations.CreateModel(
            name='clearance',
            fields=[
                ('Clearance_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Accounts', models.CharField(default='No', max_length=5)),
                ('Hr', models.CharField(default='No', max_length=5)),
                ('Hr_Plant', models.CharField(default='No', max_length=5)),
                ('IT', models.CharField(default='No', max_length=5)),
                ('Project', models.CharField(default='No', max_length=5)),
                ('status', models.CharField(default='Pending', max_length=20)),
                ('employee_id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, related_name='clearances_requested', to=settings.AUTH_USER_MODEL)),
                ('given_by', models.ForeignKey(db_column='given_by', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='clearances_given', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='chatbot_categories',
            name='c_id',
            field=models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company'),
        ),
        migrations.CreateModel(
            name='custom_forms',
            fields=[
                ('seq', models.BigAutoField(primary_key=True, serialize=False)),
                ('form_name', models.CharField(max_length=255)),
                ('alloc', models.CharField(default=None, max_length=250, null=True)),
                ('c_id', models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='custom_forms_questions',
            fields=[
                ('label', models.CharField(max_length=250)),
                ('type', models.CharField(default=None, max_length=20, null=True)),
                ('ID', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('optionName', models.CharField(default=None, max_length=250, null=True)),
                ('form_name', models.CharField(max_length=255)),
                ('c_id', models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='custom_letters',
            fields=[
                ('seq', models.BigAutoField(primary_key=True, serialize=False)),
                ('letter_name', models.CharField(max_length=250)),
                ('letter_content', models.TextField(default=None, null=True)),
                ('alloc', models.CharField(default=None, max_length=250, null=True)),
                ('c_id', models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('d_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('d_name', models.CharField(max_length=20)),
                ('add_date', models.CharField(default=None, max_length=200, null=True)),
                ('c_id', models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.company')),
            ],
        ),
        migrations.AddField(
            model_name='employee',
            name='d_id',
            field=models.ForeignKey(db_column='d_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.department'),
        ),
        migrations.CreateModel(
            name='dependent',
            fields=[
                ('D_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('D_name', models.CharField(blank=True, max_length=150, null=True)),
                ('D_gender', models.CharField(blank=True, max_length=50, null=True)),
                ('D_dob', models.DateField(blank=True, null=True)),
                ('D_relation', models.CharField(blank=True, max_length=100, null=True)),
                ('D_desc', models.TextField(blank=True, null=True)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='endorsement',
            fields=[
                ('e_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emailid', models.CharField(max_length=50)),
                ('endorse', models.CharField(max_length=1000)),
                ('from_email', models.CharField(max_length=30)),
                ('date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['emailid'], name='endorsement_emailid')],
            },
        ),
        migrations.CreateModel(
            name='family_details',
            fields=[
                ('F_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('F_name', models.CharField(max_length=200)),
                ('F_gender', models.CharField(max_length=50)),
                ('F_dob', models.DateField()),
                ('F_contact', models.CharField(max_length=15)),
                ('F_mail', models.CharField(max_length=100)),
                ('F_relation', models.CharField(max_length=100)),
                ('F_comment', models.TextField()),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='faqs',
            fields=[
                ('faq_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('answer', models.CharField(default=None, max_length=1000, null=True)),
                ('imp', models.BooleanField(default=False)),
                ('c_id', models.ForeignKey(db_column='c_id', on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='happyPerformerBackend.company')),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, related_name='faqs_created', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='forms',
            fields=[
                ('form_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('form_type', models.CharField(choices=[('job_description', 'Job Description'), ('kra_table', 'KRA Table'), ('sop', 'SOP'), ('', 'None')], default='', max_length=50)),
                ('form_data', models.CharField(default=None, max_length=100, null=True)),
                ('ratings', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], default='1', max_length=1)),
                ('remark', models.CharField(max_length=50)),
                ('appreciation', models.CharField(max_length=50)),
                ('status', models.BooleanField(default=None)),
                ('date', models.DateField()),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ITDeclaration80c',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Emp_id', models.CharField(max_length=50)),
                ('Investment1', models.CharField(default='Life Insurance Premium', max_length=30)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Public Provident Fund', max_length=30)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Unit-Linked Insurance Plan', max_length=30)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='National Savings Certificates', max_length=30)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Investment5', models.CharField(default='Mutual Funds', max_length=30)),
                ('Investment5_Amount', models.IntegerField(default=0)),
                ('Investment6', models.CharField(default='Tution Fees', max_length=30)),
                ('Investment6_Amount', models.IntegerField(default=0)),
            ],
            options={
                'indexes': [models.Index(fields=['Emp_id'], name='EmpID_to_Empemail')],
            },
        ),
        migrations.CreateModel(
            name='itdeclaration80d_new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Investment1', models.CharField(default='Medi claim Policy for Self,Spouse,Children-80D', max_length=100)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Medi claim Policy for Self,Spouse,Children for senior citizen-80D', max_length=100)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Medi claim Policy for Parents-80D', max_length=100)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Medi claim Policy or Medical Bills for parents for senior citizen-80D', max_length=100)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Investment5', models.CharField(default='Preventive health check up - 80D', max_length=100)),
                ('Investment5_Amount', models.IntegerField(default=0)),
                ('Investment6', models.CharField(default='Preventive health check up for parents - 80D', max_length=100)),
                ('Investment6_Amount', models.IntegerField(default=0)),
                ('Emp_id', models.ForeignKey(db_column='Emp_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='itdeclaration_oie_new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Investment1', models.CharField(default='Additional Exemptions on voluntary NPS', max_length=50)),
                ('Investment1_Amount', models.IntegerField(default=0)),
                ('Investment2', models.CharField(default='Rajiv Gandhi Equity savings scheme', max_length=50)),
                ('Investment2_Amount', models.IntegerField(default=0)),
                ('Investment3', models.CharField(default='Treatment of dependent with disability', max_length=50)),
                ('Investment3_Amount', models.IntegerField(default=0)),
                ('Investment4', models.CharField(default='Treatment of dependent with severe disability', max_length=50)),
                ('Investment4_Amount', models.IntegerField(default=0)),
                ('Emp_id', models.ForeignKey(db_column='Emp_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='itdeclaration_osi_new',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Investment1', models.CharField(default='Income from other sources', max_length=50)),
                ('Investment1_Amount', models.IntegerField()),
                ('Investment2', models.CharField(default='Interest Earned from Savings Deposit', max_length=50)),
                ('Investment2_Amount', models.IntegerField()),
                ('Investment3', models.CharField(default='Interest Earned from Fixed Deposit', max_length=50)),
                ('Investment3_Amount', models.IntegerField()),
                ('Investment4', models.CharField(default='Interest Earned from National Savings certificates', max_length=50)),
                ('Investment4_Amount', models.IntegerField()),
                ('Emp_id', models.ForeignKey(db_column='Emp_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='job_info',
            fields=[
                ('J_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('job_title', models.CharField(default=None, max_length=250, null=True)),
                ('department', models.CharField(default=None, max_length=150, null=True)),
                ('working_type', models.CharField(default=None, max_length=100, null=True)),
                ('start_date', models.DateField(default=None, null=True)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='kra',
            fields=[
                ('kra_no', models.BigAutoField(primary_key=True, serialize=False)),
                ('KRA', models.CharField(max_length=50)),
                ('Weightage', models.IntegerField()),
                ('KPI', models.CharField(max_length=500)),
                ('Target', models.CharField(max_length=500)),
                ('ratingsscale', models.CharField(max_length=500)),
                ('ratings', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4')])),
                ('selfratings', models.IntegerField(default=0)),
                ('remarks', models.CharField(default=None, max_length=500, null=True)),
                ('status', models.IntegerField(default=0)),
                ('email_id', models.CharField(default=None, max_length=100, null=True)),
                ('kra_id', models.ForeignKey(db_column='kra_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.kra_table')),
            ],
        ),
        migrations.CreateModel(
            name='leave_encashment',
            fields=[
                ('LE_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('txndt', models.DateField()),
                ('refn', models.IntegerField()),
                ('effdt', models.DateField()),
                ('emp', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
                ('blnc', models.IntegerField()),
                ('pdays', models.IntegerField()),
                ('sal', models.IntegerField(null=True)),
                ('enclve', models.IntegerField(null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['emp'], name='leave_encashment_emp_idx')],
            },
        ),
        migrations.CreateModel(
            name='licence',
            fields=[
                ('Licence_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('licence_no', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='login',
            fields=[
                ('login_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('emp_emailid', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='pan',
            fields=[
                ('Pan_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('pan_no', models.BigIntegerField()),
                ('pan_name', models.CharField(max_length=200)),
                ('pan_pic', models.CharField(max_length=150)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='passport',
            fields=[
                ('Pass_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('passport_no', models.BigIntegerField()),
                ('passport_name', models.CharField(max_length=200)),
                ('passport_validity', models.DateField()),
                ('passport_pic', models.CharField(max_length=150)),
                ('P_Id', models.ForeignKey(db_column='P_Id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='personal_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('Contact', models.CharField(blank=True, max_length=20, null=True)),
                ('emergency_name', models.CharField(blank=True, max_length=60, null=True)),
                ('emergency_contact', models.CharField(blank=True, max_length=60, null=True)),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('district', models.CharField(blank=True, max_length=100, null=True)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('edit', models.CharField(default='enable', max_length=10)),
                ('mail', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='poifiles_new',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('Year', models.CharField(max_length=7)),
                ('Investment_1', models.CharField(default='80C', max_length=10)),
                ('actualAmount_80C', models.IntegerField()),
                ('Doc_80C', models.CharField(max_length=255)),
                ('Status1', models.CharField(default='Pending', max_length=20)),
                ('Investment_2', models.CharField(default='80D', max_length=4)),
                ('actualAmount_80D', models.IntegerField()),
                ('Doc_80D', models.CharField(max_length=255)),
                ('Status2', models.CharField(default='Pending', max_length=20)),
                ('Investment_3', models.CharField(default='OIE', max_length=4)),
                ('OIE_actualAmount', models.IntegerField()),
                ('OIE_Doc', models.CharField(max_length=255)),
                ('Status3', models.CharField(default='Pending', max_length=20)),
                ('Investment_4', models.CharField(default='OSI', max_length=4)),
                ('OSI_actualAmount', models.IntegerField()),
                ('OSI_Doc', models.CharField(max_length=255)),
                ('Status4', models.CharField(default='Pending', max_length=20)),
                ('Emp_id', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='qualification',
            fields=[
                ('Q_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('q_type', models.CharField(max_length=100)),
                ('q_degree', models.CharField(max_length=100)),
                ('q_clg', models.TextField()),
                ('q_uni', models.TextField()),
                ('q_duration', models.IntegerField()),
                ('q_yop', models.IntegerField()),
                ('q_comment', models.TextField(blank=True, null=True)),
                ('P_Id', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='resignation',
            fields=[
                ('R_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('exp_leave', models.DateField()),
                ('notice_per', models.IntegerField(default=30)),
                ('leave_reason', models.TextField()),
                ('leave_reason_2', models.TextField(blank=True, null=True)),
                ('leave_reason_3', models.TextField(blank=True, null=True)),
                ('leave_date', models.DateField(blank=True, null=True)),
                ('notice_serve', models.IntegerField()),
                ('settle_date', models.DateField(blank=True, null=True)),
                ('shortfall_date', models.IntegerField(blank=True, null=True)),
                ('exit_interview', models.DateField(blank=True, null=True)),
                ('last_working', models.DateField(blank=True, null=True)),
                ('status', models.CharField(default='Pending', max_length=30)),
                ('approved_by', models.CharField(blank=True, max_length=50, null=True)),
                ('P_Id', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='sop',
            fields=[
                ('sop_id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('s_name', models.CharField(max_length=30)),
                ('sdate', models.DateField(blank=True, null=True)),
                ('d_id', models.ForeignKey(db_column='d_id', on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.department')),
            ],
        ),
        migrations.CreateModel(
            name='todotasks',
            fields=[
                ('tid', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=300)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('evt', models.ForeignKey(blank=True, db_column='evt_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='happyPerformerBackend.events')),
            ],
        ),
        migrations.CreateModel(
            name='tasks',
            fields=[
                ('task_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.BooleanField(default=False)),
                ('sdate', models.DateField(blank=True, null=True)),
                ('edate', models.DateTimeField(blank=True, null=True)),
                ('imp', models.BooleanField(default=False)),
                ('selfratings', models.IntegerField(default=0)),
                ('ratings', models.IntegerField(default=0)),
                ('remark', models.CharField(blank=True, max_length=30, null=True)),
                ('d_id', models.ForeignKey(db_column='d_id', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='happyPerformerBackend.department')),
                ('dpt_auditor', models.ForeignKey(db_column='dpt_auditor', on_delete=django.db.models.deletion.CASCADE, related_name='tasks_dpt_auditor', to=settings.AUTH_USER_MODEL)),
                ('dpt_head', models.ForeignKey(db_column='dpt_head', on_delete=django.db.models.deletion.CASCADE, related_name='tasks_dpt_head', to=settings.AUTH_USER_MODEL)),
                ('emp_emailid', models.ForeignKey(blank=True, db_column='emp_emailid', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_emp_emailid', to=settings.AUTH_USER_MODEL)),
                ('job_desc_id', models.ForeignKey(blank=True, db_column='job_desc_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_job_desc', to='happyPerformerBackend.job_desc')),
                ('kra_id', models.ForeignKey(blank=True, db_column='kra_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_kra', to='happyPerformerBackend.kra_table')),
                ('sop_id', models.ForeignKey(blank=True, db_column='sop_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_sop', to='happyPerformerBackend.sop')),
                ('tid', models.ForeignKey(blank=True, db_column='tid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks_tid', to='happyPerformerBackend.todotasks')),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='video',
            fields=[
                ('video_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('video_name', models.CharField(max_length=100)),
                ('location', models.TextField()),
                ('course_id', models.IntegerField()),
                ('descr', models.CharField(max_length=200)),
            ],
            options={
                'indexes': [models.Index(fields=['course_id'], name='happyPerfor_course__8af725_idx')],
            },
        ),
        migrations.CreateModel(
            name='work_exp',
            fields=[
                ('W_Id', models.BigAutoField(primary_key=True, serialize=False)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('comp_name', models.CharField(blank=True, max_length=150, null=True)),
                ('comp_location', models.CharField(blank=True, max_length=250, null=True)),
                ('designation', models.CharField(blank=True, max_length=150, null=True)),
                ('gross_salary', models.FloatField(blank=True, null=True)),
                ('leave_reason', models.TextField(blank=True, null=True)),
                ('P_Id', models.ForeignKey(db_column='emp_emailid', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['created_by'], name='case_created_by_idx'),
        ),
        migrations.AddIndex(
            model_name='case',
            index=models.Index(fields=['assigned_to'], name='case_assigned_to_idx'),
        ),
        migrations.AddIndex(
            model_name='chat',
            index=models.Index(fields=['case_id'], name='chat_case_id_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbot_questions',
            index=models.Index(fields=['category_id'], name='chatbot_questions_category'),
        ),
        migrations.AddIndex(
            model_name='clearance',
            index=models.Index(fields=['employee_id'], name='clearance_employee_idx'),
        ),
        migrations.AddIndex(
            model_name='clearance',
            index=models.Index(fields=['given_by'], name='clearance_given_by_idx'),
        ),
        migrations.AddIndex(
            model_name='chatbot_categories',
            index=models.Index(fields=['c_id'], name='chatbot_categories_c_id_idx'),
        ),
        migrations.AddIndex(
            model_name='custom_forms',
            index=models.Index(fields=['c_id'], name='custom_forms'),
        ),
        migrations.AddIndex(
            model_name='custom_forms_questions',
            index=models.Index(fields=['c_id'], name='custom_forms_questions'),
        ),
        migrations.AddIndex(
            model_name='custom_letters',
            index=models.Index(fields=['letter_name', 'c_id'], name='custom_letters_lname_c_id'),
        ),
        migrations.AddIndex(
            model_name='custom_letters',
            index=models.Index(fields=['c_id'], name='custom_letters_c_id_idx'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['d_name', 'c_id'], name='Department_d_name_c_id'),
        ),
        migrations.AddIndex(
            model_name='department',
            index=models.Index(fields=['c_id'], name='Department_c_id'),
        ),
        migrations.AddIndex(
            model_name='employee',
            index=models.Index(fields=['d_id'], name='Employee_d_id'),
        ),
        migrations.AddIndex(
            model_name='dependent',
            index=models.Index(fields=['P_Id'], name='happyPerfor_P_Id_f21c3e_idx'),
        ),
        migrations.AddIndex(
            model_name='family_details',
            index=models.Index(fields=['P_Id'], name='family_details_P_Id'),
        ),
        migrations.AddIndex(
            model_name='faqs',
            index=models.Index(fields=['emp_emailid'], name='faqs_emp_emailid'),
        ),
        migrations.AddIndex(
            model_name='faqs',
            index=models.Index(fields=['c_id'], name='faqs_c_id'),
        ),
        migrations.AddIndex(
            model_name='forms',
            index=models.Index(fields=['emp_emailid'], name='forms_emp_emailid_idx'),
        ),
        migrations.AddIndex(
            model_name='itdeclaration80d_new',
            index=models.Index(fields=['Emp_id'], name='itdeclaration80d_new_Emp_id'),
        ),
        migrations.AddIndex(
            model_name='itdeclaration_oie_new',
            index=models.Index(fields=['Emp_id'], name='itdeclaration_oie_new_Emp_id'),
        ),
        migrations.AddIndex(
            model_name='job_info',
            index=models.Index(fields=['P_Id'], name='job_info_P_Id_idx'),
        ),
        migrations.AddIndex(
            model_name='kra',
            index=models.Index(fields=['kra_id'], name='kra_kra_id_idx'),
        ),
        migrations.AddIndex(
            model_name='licence',
            index=models.Index(fields=['P_Id'], name='happyPerfor_P_Id_5a52d9_idx'),
        ),
        migrations.AddIndex(
            model_name='login',
            index=models.Index(fields=['emp_emailid'], name='login_emp_emailid_idx'),
        ),
        migrations.AddIndex(
            model_name='pan',
            index=models.Index(fields=['P_Id'], name='happyPerfor_P_Id_9ce85c_idx'),
        ),
        migrations.AddIndex(
            model_name='passport',
            index=models.Index(fields=['P_Id'], name='happyPerfor_P_Id_834938_idx'),
        ),
        migrations.AddIndex(
            model_name='personal_details',
            index=models.Index(fields=['mail'], name='happyPerfor_emp_ema_c8d10f_idx'),
        ),
        migrations.AddIndex(
            model_name='poifiles_new',
            index=models.Index(fields=['Emp_id'], name='happyPerfor_emp_ema_ddfe06_idx'),
        ),
        migrations.AddIndex(
            model_name='qualification',
            index=models.Index(fields=['P_Id'], name='happyPerfor_emp_ema_db0634_idx'),
        ),
        migrations.AddIndex(
            model_name='resignation',
            index=models.Index(fields=['P_Id'], name='happyPerfor_emp_ema_cd6729_idx'),
        ),
        migrations.AddIndex(
            model_name='sop',
            index=models.Index(fields=['d_id'], name='happyPerfor_d_id_93f7a6_idx'),
        ),
        migrations.AddIndex(
            model_name='todotasks',
            index=models.Index(fields=['evt_id'], name='happyPerfor_evt_id_ea5491_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['d_id'], name='tasks_d_id_86ad52_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['dpt_head'], name='tasks_dpt_hea_a43143_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['dpt_auditor'], name='tasks_dpt_aud_b74435_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['emp_emailid'], name='tasks_emp_ema_51e37f_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['job_desc_id'], name='tasks_job_des_666397_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['kra_id'], name='tasks_kra_id_3a5464_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['sop_id'], name='tasks_sop_id_825fb8_idx'),
        ),
        migrations.AddIndex(
            model_name='tasks',
            index=models.Index(fields=['tid'], name='tasks_tid_d99258_idx'),
        ),
        migrations.AddIndex(
            model_name='work_exp',
            index=models.Index(fields=['P_Id'], name='happyPerfor_emp_ema_6da573_idx'),
        ),
    ]
